version: '3.8'

services:
  # Servicio de Hopfield (Python)
  hopfield-service:
    build:
      context: ./hopfield
      dockerfile: Dockerfile
    container_name: hopfield-assignment-solver
    ports:
      - "5000:5000"
    environment:
      - PYTHONPATH=/app/src
      - FLASK_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hopfield-network
    restart: unless-stopped

  # API Gateway (Go)
  api-gateway:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: hopfield-api-gateway
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - GIN_MODE=release
      - HOPFIELD_SERVICE_URL=http://hopfield-service:5000
    depends_on:
      hopfield-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hopfield-network
    restart: unless-stopped

  # Nginx (opcional, para load balancing y SSL)
  nginx:
    image: nginx:alpine
    container_name: hopfield-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-gateway
    networks:
      - hopfield-network
    restart: unless-stopped

networks:
  hopfield-network:
    driver: bridge

volumes:
  nginx_ssl:
    driver: local
